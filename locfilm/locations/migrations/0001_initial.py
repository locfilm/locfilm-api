# Generated by Django 3.1.1 on 2020-10-05 21:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utils', '0001_initial'),
        ('bookings', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.PositiveIntegerField()),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, upload_to='locations/pictures')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.ImageField(upload_to='locations/pictures', verbose_name='Image of a location')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='location name')),
                ('description', models.TextField(max_length=2000, verbose_name='location description')),
                ('address', models.CharField(max_length=50, verbose_name='local address')),
                ('contact_email', models.EmailField(max_length=30, verbose_name='contact email')),
                ('price', models.FloatField(help_text='Daily cost of rent in USD', max_length=10, verbose_name='location price')),
                ('contact_phone', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format : +999999999. Up to 15 digits allowed.', regex='^\\+?\\d{9,15}$')])),
                ('main_image', models.ImageField(null=True, upload_to='locations/pictures', verbose_name='Main picture of a location')),
                ('latitude', models.FloatField(max_length=20, verbose_name='latitude')),
                ('longitude', models.FloatField(max_length=20, verbose_name='longitude')),
                ('is_active', models.BooleanField(default=False, help_text='If active, can be listed for rent', verbose_name='active location')),
                ('has_parking', models.BooleanField(default=False, help_text='Location has parking space', verbose_name='parking')),
                ('has_dressing_room', models.BooleanField(default=False, help_text='Location has dressing room space', verbose_name='dressing room')),
                ('has_bathroom', models.BooleanField(default=False, help_text='Location has bathroom', verbose_name='bathroom')),
                ('has_cattering', models.BooleanField(default=False, help_text='Location has cattering space', verbose_name='cattering')),
                ('has_wifi', models.BooleanField(default=False, help_text='Location has wifi available', verbose_name='wifi')),
                ('is_verified', models.BooleanField(default=False, help_text='locations has to be verified before listed for rent', verbose_name='verified location')),
                ('categories', models.ManyToManyField(through='locations.Group', to='locations.Category')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='utils.city')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_date', models.DateTimeField(verbose_name='Rating date')),
                ('accesibility', models.SmallIntegerField(default=0, verbose_name='Accesibility of location')),
                ('conditions', models.SmallIntegerField(default=0, verbose_name='Conditions of location')),
                ('average', models.SmallIntegerField(default=0, verbose_name='value for money of the location')),
                ('description', models.CharField(max_length=2000, null=True, verbose_name='Observations about the experience of the user')),
                ('booking_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookings.booking')),
                ('location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.location')),
            ],
        ),
    ]
